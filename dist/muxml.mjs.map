{"version":3,"file":null,"sources":["../src/index.js"],"sourcesContent":["\nimport {StringDecoder} from 'string_decoder';\nimport deepAssign from 'deep-assign';\nimport sax from 'sax';\nimport through from 'through2';\n\nconst defaultOpts = {\n\tstrict: true,\n\tstripAttributes: false,\n\tstripCdata: true,\n\tstripComments: true,\n\tstripDoctype: true,\n\tstripInstruction: true,\n\tpretty: true,\n\ttagFilter: null,\n\tnewlines: true,\n\tindentStyle: 'spaces',\n\tindentSpaces: 2,\n\tindentTabs: 1,\n\tsaxOptions: {\n\t\ttrim: true,\n\t\tnormalize: false,\n\t\tlowercase: false,\n\t\txmlns: false,\n\t\tposition: false,\n\t\tstrictEntities: false\n\t}\n};\n\nlet self = {};\nself.opts = {};\nself.tagFilter = null;\nself.mustPrint = false;\nself.level = 0;\nself.nestLevel = 0;\n\nlet lastChunk = '';\nlet decoder = new StringDecoder('utf8');\nlet parser;\n\nlet transformStream = function (chunk, enc, cb) {\n\tparser = sax.createStream(self.opts.strict, self.opts.saxOptions);\n\tlastChunk += decoder.write(chunk);\n\tlet me = this;\n\n\tfunction entityQuotes(str) {\n\t\treturn str.replace('\"', '&quot;');\n\t}\n\n\tfunction print(xml) {\n\t\tif (self.mustPrint === true) {\n\t\t\tme.push(eol(indent(xml)));\n\t\t}\n\t}\n\n\tfunction indent(xml) {\n\t\tif (self.opts.pretty === true) {\n\t\t\tfor (let j = self.level; j > 0; j--) {\n\t\t\t\tif (self.opts.indentStyle === 'spaces') {\n\t\t\t\t\tfor (let i = 0; i < self.opts.indentSpaces; i++) {\n\t\t\t\t\t\txml = ' ' + xml;\n\t\t\t\t\t}\n\t\t\t\t} else if (self.opts.indentStyle === 'tabs') {\n\t\t\t\t\tfor (let i = 0; i < self.opts.indentTabs; i++) {\n\t\t\t\t\t\txml = '\\t' + xml;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn xml;\n\t}\n\n\tfunction eol(xml) {\n\t\tif (self.opts.pretty === true) {\n\t\t\txml += '\\n';\n\t\t}\n\t\treturn xml;\n\t}\n\n\tparser.onopentag = function (tag) {\n\t\tif (tag.name === self.tagFilter) {\n\t\t\tself.mustPrint = true;\n\t\t\tself.nestLevel += 1;\n\t\t}\n\t\tlet printable = '<' + tag.name;\n\t\tif (self.opts.stripAttributes === false) {\n\t\t\tif (tag.attributes) {\n\t\t\t\tfor (let i in tag.attributes) {\n\t\t\t\t\tif (tag.attributes[i]) {\n\t\t\t\t\t\tprintable += ' ' + i + '=\"';\n\t\t\t\t\t\tprintable += entityQuotes(tag.attributes[i]) + '\"';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tprintable += '>';\n\t\tprint(printable);\n\t\tself.level += self.mustPrint ? 1 : 0;\n\t\tme.emit('openTag', tag);\n\t};\n\n\tparser.onclosetag = function (tag) {\n\t\tself.level -= self.mustPrint ? 1 : 0;\n\t\tprint('</' + tag + '>');\n\t\tif (tag === self.tagFilter) {\n\t\t\tself.nestLevel -= 1;\n\t\t\tif (self.nestLevel === 0) {\n\t\t\t\tself.mustPrint = false;\n\t\t\t}\n\t\t}\n\t\tme.emit('closeTag', tag);\n\t};\n\n\tparser.onattribute = function (attr) {\n\t\tme.emit('attribute', attr);\n\t};\n\n\tparser.ontext = function (text) {\n\t\tprint(text);\n\t\tme.emit('text', text);\n\t};\n\n\tparser.onopencdata = function () {\n\t\tif (self.opts.stripCdata === false) {\n\t\t\tprint('<![CDATA[');\n\t\t\tme.emit('openCdata');\n\t\t}\n\t};\n\n\tparser.oncdata = function (text) {\n\t\tif (self.opts.stripCdata === false) {\n\t\t\tself.level += 1;\n\t\t\tprint(text);\n\t\t\tself.level -= 1;\n\t\t\tme.emit('cdata', text);\n\t\t}\n\t};\n\n\tparser.onclosecdata = function () {\n\t\tif (self.opts.stripCdata === false) {\n\t\t\tprint(']]>');\n\t\t\tme.emit('closeCdata');\n\t\t}\n\t};\n\n\tparser.oncomment = function (comment) {\n\t\tif (self.opts.stripComments === false) {\n\t\t\tprint('<!-- ' + comment + ' -->');\n\t\t\tme.emit('comment', comment);\n\t\t}\n\t};\n\n\tparser.ondoctype = function (doctype) {\n\t\tif (self.opts.stripDoctype === false) {\n\t\t\tprint('<!DOCTYPE' + doctype + '>');\n\t\t\tme.emit('doctype', doctype);\n\t\t}\n\t};\n\n\tparser.onprocessinginstruction = function (instruction) {\n\t\tif (self.opts.stripInstruction === false) {\n\t\t\tprint('<?' + instruction.name + ' ' + instruction.body + '?>');\n\t\t\tme.emit('instruction', instruction);\n\t\t}\n\t};\n\n\tparser.write(lastChunk);\n\tlastChunk = '';\n\tcb();\n};\n\nlet endStream = function (cb) {\n\tlastChunk += decoder.end();\n\tif (lastChunk.length > 0) {\n\t\tparser.write(lastChunk);\n\t}\n\tcb();\n};\n\nexport default function (opts) {\n\tself.mustPrint = false;\n\tself.tagFilter = (opts && opts.tagFilter) ? opts.tagFilter : null;\n\tif (self.tagFilter === null) {\n\t\tself.mustPrint = true;\n\t}\n\tself.level = 0;\n\tself.nestLevel = 0;\n\tdeepAssign(self.opts, defaultOpts, opts ? opts : {});\n\n\treturn through(transformStream, endStream);\n}\n"],"names":[],"mappings":"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"}